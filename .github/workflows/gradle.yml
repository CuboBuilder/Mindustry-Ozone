name: Java CI

on: [push]

jobs:
  Build-Test-Release:
    runs-on: ubuntu-latest

    steps:
      # Проверка репозитория
      - name: Fetch Sources
        uses: actions/checkout@v3

      # Установка JDK 14
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      # Клонирование библиотеки Atom
      - name: Clone Atom
        run: git clone --depth=1 --branch=master https://github.com/o7-Fire/Atomic-Library ../Atom

      # Изменение разрешений для Gradle wrapper
      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Кэширование зависимостей Gradle
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-caches-${{ runner.os }}-${{ hashFiles('**/*.gradle*', 'gradle.properties') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: gradle-wrapper-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties') }}

      # Сборка модификации
      - name: Build mod jar
        run: |
          ./gradlew deploy \
          -Pversion="$GITHUB_SHA" \
          -PgBranch="${GITHUB_REF##*/}" \
          -PgRepoOwner="$GITHUB_ACTOR" \
          -PgRepo="$GITHUB_REPOSITORY" \
          -Pbuilder="Github-CI" \
          -PbuilderID="$GITHUB_RUN_ID"

      # Загрузка собранных артефактов
      - name: Upload Desktop Jar
        uses: actions/upload-artifact@v3
        with:
          name: Mindustry-Desktop
          path: Desktop/build/libs/Ozone-Desktop.jar

      - name: Upload Core Jar
        uses: actions/upload-artifact@v3
        with:
          name: Mindustry-Core
          path: build/libs/Ozone.jar

      - name: Upload Android Jar
        uses: actions/upload-artifact@v3
        with:
          name: Mindustry-Core-Dexed
          path: build/libs/Ozone-Dexed.jar

      - name: Upload Manifest
        uses: actions/upload-artifact@v3
        with:
          name: Ozone-Manifest
          path: src/resources/Manifest.properties

      # Тестирование приложения
      - name: Ozone Test
        run: java -DozoneTest=true -jar Desktop/build/libs/Ozone-Desktop.jar

      # Удаление старых черновиков релизов
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}

      # Чтение манифеста
      - name: Read Manifest
        id: manifest
        uses: juliangruber/read-file-action@v1
        with:
          path: ./src/resources/Manifest.properties

      # Создание черновика релиза
      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "Snapshot"
          release_name: "0:0"
          body: |
            ${{ steps.manifest.outputs.content }}
            #[Download-Jitpack](https://jitpack.io/com/github/o7-Fire/Mindustry-Ozone/Desktop/${{ github.sha }}/Desktop-${{ github.sha }}.jar)
          draft: true

      # Загрузка файлов в релиз
      - name: Upload Desktop to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Desktop/build/libs/Ozone-Desktop.jar
          asset_name: Ozone-Desktop.jar
          asset_content_type: application/zip

      - name: Upload Core to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/Ozone-Dexed.jar
          asset_name: dexed-Ozone-Core.jar
          asset_content_type: application/zip

      - name: Upload Manifest to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/resources/Manifest.properties
          asset_name: Manifest.properties
          asset_content_type: application/zip
